import numpy as np
from scipy.stats import ks_1samp, uniform

# Generar 100 números aleatorios en un rango diferente de [0,1], por ejemplo [10, 50]
a, b = 10, 50  # Límites del intervalo
random_numbers = np.random.uniform(a, b, 100)

# Función de distribución acumulativa teórica de una uniforme en [a, b]
def uniform_cdf(x):
    return uniform.cdf(x, loc=a, scale=b-a)

# Aplicar la prueba de Kolmogorov-Smirnov
ks_statistic, p_value = ks_1samp(random_numbers, uniform_cdf)

# Mostrar resultados
print(f'Estadístico KS: {ks_statistic}')
print(f'Valor p: {p_value}')

# Interpretación del resultado
alfa = 0.05  # Nivel de significancia
if p_value > alfa:
    print("No se rechaza la hipótesis nula: los datos pueden seguir una distribución uniforme.")
else:
    print("Se rechaza la hipótesis nula: los datos no siguen una distribución uniforme.")
